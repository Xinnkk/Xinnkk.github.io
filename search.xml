<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>自定义Pytorch数据集类</title>
    <url>/2024/05/24/%E8%87%AA%E5%AE%9A%E4%B9%89pytorch%E6%95%B0%E6%8D%AE%E9%9B%86%E7%B1%BB/</url>
    <content><![CDATA[<p>在PyTorch 中，自定义数据集类的作用主要是为了灵活地处理数据加载和预处理，使得数据集与 DataLoader 更好地配合工作，可以方便地进行数据预处理、数据增强等操作，并能够处理不同格式的数据。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CustomDataset</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__ini__</span>(<span class="params">self, path_dir</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">        self.data_X = read_data_X(path_dir)</span></span><br><span class="line"><span class="string">        self.data_y = read_data_y(path_dir)</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">    def __len__(self):</span></span><br><span class="line"><span class="string">        return len(self.data)</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    def __getotem__(self, idx):</span></span><br><span class="line"><span class="string">        x = self.data_X</span></span><br><span class="line"><span class="string">        y = self.data_y</span></span><br><span class="line"><span class="string">        return &#123;&quot;label&quot;: y, &quot;data&quot;: x&#125; OR image, label</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 完成自定义后，调用DataLoader进行</span></span><br><span class="line"><span class="string">from torch.utils.data import DataLoader</span></span><br><span class="line"><span class="string">from sklearn.model_selection import train_test_split</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">train_dataset = CustomDataset(path_dir)</span></span><br><span class="line"><span class="string">train_loader = DataLoader(train_dataset, batch_size, shuffle=True)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 训练部分</span></span><br><span class="line"><span class="string">for epoch in range(10):</span></span><br><span class="line"><span class="string">    for batch in train_loader:</span></span><br><span class="line"><span class="string">        out = model(batch)</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>python</tag>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇博客</title>
    <url>/2024/05/23/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>后续会陆续更新 :)</p>
]]></content>
  </entry>
</search>
